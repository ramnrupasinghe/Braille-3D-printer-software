//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace calculator.PrintTriangle {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://pragimtech.com/webservices", ConfigurationName="PrintTriangle.calculateSoap")]
    public interface calculateSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://pragimtech.com/webservices/Triangle", ReplyAction="*")]
        double Triangle(double sideOne, double sideTwo, double sideThree);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://pragimtech.com/webservices/Triangle", ReplyAction="*")]
        System.Threading.Tasks.Task<double> TriangleAsync(double sideOne, double sideTwo, double sideThree);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface calculateSoapChannel : calculator.PrintTriangle.calculateSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class calculateSoapClient : System.ServiceModel.ClientBase<calculator.PrintTriangle.calculateSoap>, calculator.PrintTriangle.calculateSoap {
        
        public calculateSoapClient() {
        }
        
        public calculateSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public calculateSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public calculateSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public calculateSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double Triangle(double sideOne, double sideTwo, double sideThree) {
            return base.Channel.Triangle(sideOne, sideTwo, sideThree);
        }
        
        public System.Threading.Tasks.Task<double> TriangleAsync(double sideOne, double sideTwo, double sideThree) {
            return base.Channel.TriangleAsync(sideOne, sideTwo, sideThree);
        }
    }
}
